# AppVeyor CI config
environment:
  BINTRAY_API_KEY:
    secure: AGZJlJvqTJR3lySeBoANrPYyWfgLJciSqTZm3/ZEPbUx4dQ9m1fiWGY3RYBGaYOq
  BINTRAY_API_USERNAME:
    secure: QyZ6LhunNhgW3l/1aiGROg==
  GOOGLE_URL_SHORTENER_API_KEY:
    secure: yPv9WtzW+27giJAicFEXGV0KENiee+3+BG2CIOLarbu5wsm7q/h0Ixqsq70CITPi
  QT5_BIN_DIR_DYNAMIC_32: C:\Qt\5.11\msvc2015\bin
  QT5_BIN_DIR_DYNAMIC_64: C:\Qt\5.11\msvc2015_64\bin
  QT5_BIN_DIR_STATIC_32: C:\Qt\Qt5.12.0-static\bin
  QT5_BIN_DIR_STATIC_64: C:\Qt\Qt5.12.0x64-static\bin
  LIBUSB_INCLUDE_DIR_DYNAMIC_32: C:\Tools\vcpkg\installed\x86-windows\include\libusb-1.0
  LIBUSB_INCLUDE_DIR_DYNAMIC_64: C:\Tools\vcpkg\installed\x64-windows\include\libusb-1.0
  LIBUSB_INCLUDE_DIR_STATIC_32: C:\Tools\vcpkg\installed\x86-windows-static\include\libusb-1.0
  LIBUSB_INCLUDE_DIR_STATIC_64: C:\Tools\vcpkg\installed\x64-windows-static\include\libusb-1.0

install:
  - git submodule update --init --recursive
  - C:\Python35\Scripts\pip install requests jinja2 irc
  - C:\Python35\python -u gui\qt\deploy-scripts\appveyor_helper.py install

# Leverage vcpkg to install libarchive deps, because we're lazy
# Make sure we set the special VCPKG_PLATFORM_TOOLSET var to v140
# to build for VS2010.
  - set VCPKG_PLATFORM_TOOLSET=v140

# Hack to update vcpkg to maybe make things work
# Temporarily disabled (AppVeyor's copy should work)
#  - cd "C:\Tools\vcpkg"
#  - git pull
#  - .\bootstrap-vcpkg.bat
#  - cd %APPVEYOR_BUILD_FOLDER%

# Install libarchive for all targets
  - vcpkg install libarchive:x86-windows --recurse
  - vcpkg install libarchive:x64-windows --recurse
  - vcpkg install libarchive:x86-windows-static --recurse
  - vcpkg install libarchive:x64-windows-static --recurse

# Install libusb for all targets
  - vcpkg install libusb:x86-windows --recurse
  - vcpkg install libusb:x64-windows --recurse
  - vcpkg install libusb:x86-windows-static --recurse
  - vcpkg install libusb:x64-windows-static --recurse

# Install libpng-apng for all targets
  - vcpkg install libpng-apng:x86-windows --recurse
  - vcpkg install libpng-apng:x64-windows --recurse
  - vcpkg install libpng-apng:x86-windows-static --recurse
  - vcpkg install libpng-apng:x64-windows-static --recurse

  - md build_32
  - md build_64
  - md build_static_32
  - md build_static_64

# Since we want to use vcpkg, ensure that it's integrated into the
# build environment.
  - cd c:\tools\vcpkg
  - vcpkg integrate install
  - cd %APPVEYOR_BUILD_FOLDER%

build_script:
  # Figure out version to set - if tag is defined, use that.
  # If not, set it to a space (which would evaluate to empty in our QMake command).
  - if defined APPVEYOR_REPO_TAG_NAME (set CEMU_VERSION=%APPVEYOR_REPO_TAG_NAME% & echo Using tagged version %CEMU_VERSION%) ELSE (set "CEMU_VERSION= " & echo No version defined, using empty version '%CEMU_VERSION%' and allowing QMake to set default for dev.)

  - setlocal

  - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - set QMAKE_FLAGS=-spec win32-msvc -tp vc CEMU_VERSION=%CEMU_VERSION% LIBUSB_FROM_VCPKG=1 LIBPNG_APNG_FROM_VCPKG=1 "..\gui\qt\CEmu.pro"

  - cd build_32
  - '%QT5_BIN_DIR_DYNAMIC_32%\qmake %QMAKE_FLAGS% INCLUDEPATH+=%LIBUSB_INCLUDE_DIR_DYNAMIC_32%'
  - msbuild CEmu.vcxproj /p:Configuration=Debug
  - msbuild CEmu.vcxproj /p:Configuration=Release
  - cd ..

  - cd build_static_32
  - '%QT5_BIN_DIR_STATIC_32%\qmake %QMAKE_FLAGS% INCLUDEPATH+=%LIBUSB_INCLUDE_DIR_STATIC_32%'
  - msbuild CEmu.vcxproj /p:Configuration=Debug /p:VcpkgTriplet=x86-windows-static
  - msbuild CEmu.vcxproj /p:Configuration=Release /p:VcpkgTriplet=x86-windows-static
  - cd ..

  - endlocal

  - setlocal

  - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64

  - cd build_64
  - '%QT5_BIN_DIR_DYNAMIC_64%\qmake %QMAKE_FLAGS% INCLUDEPATH+=%LIBUSB_INCLUDE_DIR_DYNAMIC_64%'
  - msbuild CEmu.vcxproj /p:Configuration=Debug /p:Platform="x64"
  - msbuild CEmu.vcxproj /p:Configuration=Release /p:Platform="x64"
  - cd ..

  - cd build_static_64
  - '%QT5_BIN_DIR_STATIC_64%\qmake %QMAKE_FLAGS% INCLUDEPATH+=%LIBUSB_INCLUDE_DIR_STATIC_64%'
  - msbuild CEmu.vcxproj /p:Configuration=Debug /p:Platform="x64" /p:VcpkgTriplet=x64-windows-static
  - msbuild CEmu.vcxproj /p:Configuration=Release /p:Platform="x64" /p:VcpkgTriplet=x64-windows-static
  - cd ..

  - endlocal

after_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - C:\Python35\python -u gui\qt\deploy-scripts\appveyor_helper.py deploy

on_success:
  - cd %APPVEYOR_BUILD_FOLDER%
#  - C:\Python35\python -u gui\qt\deploy-scripts\build_status.py SUCCESS

on_failure:
  - cd %APPVEYOR_BUILD_FOLDER%
#  - C:\Python35\python -u gui\qt\deploy-scripts\build_status.py FAILURE

cache:
  - build_state -> appveyor.yml
  - c:\tools\vcpkg\installed\

artifacts:
 - path: deploy\*-win32-release-static*.zip
   name: static_32_release
   type: zip

 - path: deploy\*-win64-release-static*.zip
   name: static_64_release
   type: zip

deploy:
  # Required to only send updated stuff to our manually created tag
  # aka don't try to create a new one
  tag: $(appveyor_repo_tag_name)
  release: $(appveyor_repo_tag_name)
  provider: GitHub
  auth_token:
    secure: nT2ApY5FbhZtGKrIWzgH9UYsFi/otN56t3fdwusTjo7Gc3pk+L8VMoLf9lbAL+Ol
  artifact: static_32_release,static_64_release
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
